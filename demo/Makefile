# This target generates a core WebAssembly module with a custom section
# containing the component type information in it. This .wasm file can then be
# used with 'wasm-tools component new' to create a WebAssembly Component Module.
core-module.wasm: demo.wat wit/python.wit
	wasm-tools component embed wit/python.wit demo.wat -o $@

# This target generates the WebAssembly Component Module using the wasm module
# with the custom section generated by the 'core-module.wasm' target.
component.wasm: core-module.wasm
	wasm-tools component new -v -o $@ $<

print-core-module: core-module.wasm
	wasm-tools objdump $<

print-component: component.wasm
	wasm-tools objdump $<

# Generates the Python bindings for the component.
bindings: component.wasm
	python3 ../wasmtime/bindgen $< --out-dir dist

run: 
	@python3 demo.py

.PHONY clean:
clean:
	@${RM} -rf component.wasm core-module.wasm dist

